IS201 Fundamentals of Computing
H0S03 Lists, Tuples
03/21/2024 Developed by Scott Zhou
4/10/2024 Reviewed by Vaishnavi Mandage

School of Technology & Computing (STC) @City University of Seattle (CityU)

   
Before You Start 	
•	The directory path shown in screenshots may be different from yours.
•	Some steps are not explained in the tutorial. If you are not sure what to do:
1.	Consult the resources listed below.  
2.	If you cannot solve the problem after a few tries, ask a SW for help.

Learning Outcomes
Students will be able to:
•	Understand the List Data Type and Tuples in Python
•	Write a Python program with functions that can be performed in Lists and Tuples


Lists
The list is the most versatile datatype available in Python, and it can be written as a list of comma-separated values (items) between square brackets. The important thing about a list is that items need not be the same type.
Creating a list is as simple as putting different comma-separated values between square brackets. 

To access values in lists, use the square brackets for slicing along with the index or indices to obtain the value available at that index. Python considers the first item in a list to be at position 0, not position 1. 


Adding elements 

Append

The simplest way to add a new element to a list is to append the item. When you append an item to a list, the new element is added to the end of the list. The append() method makes it easy to build lists dynamically.








Inserting elements

You can add a new element at any position in your list using the insert() method. You do this by specifying the new element's index and the new item's value.


Removing element

There are 3 ways to remove an element from a list.
i)	If you know the position of the item you want to remove from a list, you can use the del statement.
ii)	The pop() method removes the last item in a list, but it lets you work with that item after removing it. The term pop comes from thinking of a list as a stack of items and popping one item off the top of the stack. In this analogy, the top of a stack corresponds to the end of a list. You can use pop() to remove an item from any position in a list by including the index of the item you want to remove in parentheses. 
iii)	If you only know the value of the item you want to remove, you can use the remove() method.


Using Loop in lists


The range() function causes Python to start counting at 0 and stops when it reaches the length of the list. The len() function calculates the length of the list. The i consists of the range index used to navigate the list. If the value in the list is less than 0, that is a negative value, and then that value is converted to an absolute value and returned to the list. 



Tuples

A tuple is a sequence of immutable Python objects. The tuple data type is similar to a list, except tuples are typed with parentheses and cannot be modified, appended, or removed. The following is what the tuples look like.

tup1 = ('physics', 'chemistry', 1997, 2000);





"def" is the function, which will be explained in later chapters. The sorted function takes in a keyword argument called key. Key provides a way to specify a function that returns what you would like your items sorted by. The function gets an "invisible" argument passed to it that represents an item in the list and returns a value that you would like to be the item's "key" for sorting.

Create a Project
 
Follow HOS1 to set up the project in Codespaces, or use any other code editor you prefer, such as Visual Studio, Visual Studio Code, Sublime, Vim, etc…

We will create a Python project to cover all the learning outcomes.
 
1.	Create a Python file named HOS03.py
2.	Create a function to add a book to the book list.

3.	Create a function to remove a book by its title.
 

4.	Define a function to search a book by its title.

 
5.	Define a function to convert a list to a tuple.
 

6.	Define a function to convert a tuple back to a list.

 
7.	Create and store a book list in the list, using a covert method to store it in the tuple.

 

8.	Convert the tuple back to the list and test all remaining methods. (add, remove, and search)

 

9.	Use a For Loop to iterate through the list and verify the final book list.

 

10.	The expected output:

 


Submit your Work to Brightspace

Please upload your .py file to the HOS03 assignment on Brightspace.

